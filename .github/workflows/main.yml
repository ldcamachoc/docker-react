#Workflow to deploy docker image

name: CI

on:
  push:
    branches:
      - 'master'
jobs:
  docker-build:
    runs-on: ubuntu-latest
    env:
     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    strategy:
      matrix:
        node-version: [12.x]

    steps:
      -
        name: Checkout
        uses: actions/checkout@v2 
      #Node.js
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install
      - run: npm run build --if-present
      - run: npm test -- --coverage
      #Docker
      -
        name: Set up QEMU
        if: success()
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        if: success()
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        if: success()
        uses: docker/login-action@v1 
        with:
          username:   ${{ secrets.DOCKER_USERNAME }}
          password:   ${{ secrets.DOCKER_PASSWORD }}         
      - 
        name: Build and push Docker images
        if: success()
        id: docker_build
        uses: docker/build-push-action@v2.3.0        
        with:        
          repository: ldcamachoc/docker-react
          context: ./
          file: ./Dockerfile.dev         
          tags: ldcamachoc/docker-react:1.0.0,ldcamachoc/docker-react:latest
          push: true
      #AWS
      - name: Generate deployment package
        if: success()
        run: zip -r deploy.zip ./*

      - name: Deploy to EB
        if: success()
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: docker-react-app-4  
          environment_name: Dockerreactapp4-env
          version_label: Sample Application
          region: us-east-1
          deployment_package: deploy.zip
      # - 
      #   name: Deploy to AWS Elastic Beanstalk
      #   if: success()
      #   uses: Amraneze/aws-beanstalk-deploy@master
      #   with:
      #     region: "us-east-1"
      #     environment_name: "Dockerreactapp2-env"
      #     application_name: "docker-react-app2"
      #     aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     s3_bucket_name: "elasticbeanstalk-us-east-1-189137563013"
      #     s3_file_path: "" 
      #     ebs_version_label: "1.0.0"
      #     ebs_description: "First Version"
      #     ebs_wait_for_env_to_be_green: true

      # - name: Elastic Beanstalk Deployment
      #   if: success()
      #   uses: kumarshivam12/Aws-ElasticBeanstalk@v1.3
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      #     EB-BUCKET-NAME: elasticbeanstalk-us-east-1-189137563013
      #     APPLICATION-NAME: docker-react-app2            
      #     EB-ENV-NAME: Dockerreactapp2-env
      #     AWS-REGION: us-east-1
         
      # -
      #   name: test
      #   run: docker run -e CI=true ldcamachoc/docker-react:1.0.0 npm run test
      #   run: npm run test